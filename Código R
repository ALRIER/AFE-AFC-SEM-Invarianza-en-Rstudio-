install.packages("psych")
install.packages("corrplot")
install.packages("corrr")
install.packages("semPlot")
install.packages("latticeExtra")
install.packages("readr") 
install.packages("lavaan")
library("semPlot")
library("readr")
library("lavaan")
library("dplyr")
library("psych")
library("corrr")
library("corrplot")
library("haven")
library("semTools")
??Lavaan

#i will upload the file.
rf <- read_excel("Documentos/AAA DOCTORADO/PROYECTO DOCTORAL/metodolÃ³gico/Respuestas encuesta final.xlsx")
#Using dyplyer i create a dataframe with the variables i will use. 
data1 <- rf%>%select(uso_r_sociales1, uso_r_sociales2, uso_r_sociales3, uso_r_sociales4, uso_r_sociales5, Int_busq_info1, Int_busq_info2, Int_busq_info3, int_visita1, int_visita2, int_visita3, int_visita4, Sexo, Edad)
#i Take a look of the correlation matrix, to see hoe the variables behave. 
mcorre <-cor(data1)
View(mcorre)
#i will print the correlation matxir to take a better look of it. 
corrplot(cor(data1), order="hclust", tl.col='black', tl.cex=0.5)
#I make bartlett, KMO and covariances.
#Important to take in consideration a KMO higer than 0.80 for the CPA or Factorial analysis. 
bartlett.test(data1)
cov(data1)
KMO(data1)
#I proceed to identify the factors using the CPA method or the igen matrix. 
eigen(mcorre)
#As i told the CPA is a good indicator too. 
acp <- prcomp(Respuestas_encuesta_final, center = T, scale. = T)
print(acp)
# i can see the L plot to see the number of factors present 
plot(acp, type="l")
#i will see if the 3 factors fits propperly with the varimax rotation method. 
AnalisisF <- factanal(data1, factors = 3, rotation = "varimax", scores= "Bartlett")
AnalisisF
#CONFORMATORY FACTOR ANALYSIS  CFA-----------------------
#once i made the CPA and the exploratory factor analysis i can organize the confirmatory onces. 

#The idea of CFA is to confirm the propper structure of the variables into an specific model so
#i proceed to create the model.

#here i show just one model, which i already know that worked, but in fact, ther where 3 different models i tried. 
modelo0 <- 'Uso_rd =~ uso_r_sociales1 + uso_r_sociales2 + uso_r_sociales3
Int_B =~ Int_busq_info1 + Int_busq_info2 + Int_busq_info3 
Int_V =~ int_visita1 + int_visita2 + int_visita3 + int_visita4
Uso_rd~~Int_B
Int_B~~Int_V
Uso_rd~~Int_V
'
#i will identify the structure of the model 
CFA1<- cfa(modelo0, orthogonal= TRUE, data = data1,
           estimator= "WLSMV", ordered =
             names(data1))

3this one in case i would like to make the SEM (Structural equation models). 
#modelo0 <- sem(modelo0, data = data1) 

#I can create the summary of the model, to see how it fits, if fits. 
summary(CFA1, fit.measures=TRUE, rsq=TRUE)
#I can take a look of all the parameters individually. 
#parameterestimates(modelo0, standardized = TRUE)
#I can take a look of the fitmeasures, which is pretty good idea in some cases. 
#fitMeasures(CFA1)
#I can plot the model in a tradittional way. 
#semPaths(CFA1, what = "paths", layout = "tree", title = TRUE, style = "LISREL")
#semPaths(CFA1, what = "est", layout = "tree", title = TRUE, style = "LISREL")
#But this kind of plot is much better in term of aestethics. 
semPaths(CFA1, intercepts = FALSE,edge.label.cex=1.5, optimizeLatRes = TRUE, groups = "lat",pastel = TRUE, exoVar = FALSE, sizeInt=5,edge.color ="black",esize = 6, label.prop=2,sizeLat = 6,"std", layout="circle2")

#Now, when we are taking a look of the model goodness-of-fit indices, is good to know that 
#every value has to be upper thatn 0.90 but the RMSEA has to be lower than 0.60(+/-)
#here i can extract the model goodness-of-fit indices im interested in.
fitMeasures(CFA1,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

#Invariance multigroup analysis ----------------------------------

#Now, im interested in knowing if the male and female have the same structure 
#or if the model i decided is the best behaves in the same way for both of theme.
#for this reason i will make an invariance multigroup analysis.

#Now there are 5 different levels of invariance multigroup, i will check each one to see if the 
# model goodness-of-fit indices change of not between different groups. 

#First,  i check my CFA again, everything is working well. 
#conf1<-cfa(modelo0, orthogonal=FALSE, data= data1, estimator="WLSMV",group="Sexo", ordered =names(data1))
#summary(conf1, fit.measures=TRUE)
#fitMeasures(conf1,
#            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )
#Now i will start with the configural level of invariance, which is the most basic level
modelo0.conf <- measEq.syntax(configural.model = modelo0, estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Sexo", orthogonal=FALSE, data=data1,
                              ID.cat = "Wu.Estabrook.2016",return.fit=TRUE,group.equal = c("thresholds"))
#Check the summary                              
summary(modelo0.conf, fit.measures=TRUE)
#Fit indices, i dont see a big variance in the RMSEA and GFI which aproves the level. 
fitMeasures(modelo0.conf,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )
#i continue with the Metric level
modelo0.metric<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Sexo", orthogonal=FALSE, data=data1, parameterization = "theta",
                               ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings"),long.equal  = c("thresholds","loadings"))
#I run the summary
summary(modelo0.metric, fit.measures=TRUE)
#Take a look of the fit indices and aprove de next level
fitMeasures(modelo0.metric,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )
#now i will check the scalar level. 
modelo0.scalar<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Sexo", orthogonal=FALSE, data=data1, parameterization = "theta",
                               ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings","intercepts"),long.equal  = c("thresholds","loadings","intercepts"))
#i apply the summary of the invariance model. 
summary(modelo0.scalar, fit.measures=TRUE)
#check the fit indices and aprove the level after see that the RMSEA doesent change in more than 0.015 and the GFI doesent change in more than 0.1.
fitMeasures(modelo0.scalar,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )
Finally i will check the strict level (theres one more level but i will no check it for now)
modelo0.stric<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Sexo", orthogonal=FALSE, data=data1, parameterization = "theta",
                              ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings","intercepts","residuals"),long.equal  = c("thresholds","loadings","intercepts","residuals"))
#Summary 
summary(modelo0.stric, fit.measures=TRUE)
#approved the level, i can conclude theres no significant differences in the perception of my variable between male and female. 
fitMeasures(modelo0.stric,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

#Now i will organize the model fit indices 
lavaan::anova(modelo0.stric,modelo0.scalar,modelo0.metric,modelo0.conf)

fit.stats <- rbind(fitmeasures(modelo0.conf, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.metric, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.scalar, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.stric, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")))
rownames(fit.stats) <- c("configural", "metric","scalar", "strict")
fit.stats


#Now i repeat the same process with different group, now i will try the invariance with the age gruop. 
#first level invariance. 
modelo0.conf.ed <- measEq.syntax(configural.model = modelo0, estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Edad", orthogonal=FALSE, data=data1,
                              ID.cat = "Wu.Estabrook.2016",return.fit=TRUE,group.equal = c("thresholds"))
#i make the summary of the model 
summary(modelo0.conf.ed, fit.measures=TRUE)
fitMeasures(modelo0.conf.ed,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

modelo0.metric.ed<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Edad", orthogonal=FALSE, data=data1, parameterization = "theta",
                               ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings"),long.equal  = c("thresholds","loadings"))
summary(modelo0.metric.ed, fit.measures=TRUE)
fitMeasures(modelo0.metric.ed,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

modelo0.scalar.ed<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Edad", orthogonal=FALSE, data=data1, parameterization = "theta",
                               ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings","intercepts"),long.equal  = c("thresholds","loadings","intercepts"))
summary(modelo0.scalar.ed, fit.measures=TRUE)
fitMeasures(modelo0.scalar.ed,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

modelo0.stric.ed<- measEq.syntax(configural.model = modelo0 ,estimator="WLSMV", ID.fac = "std.lv", parameterization = "theta",  group = "Edad", orthogonal=FALSE, data=data1, parameterization = "theta",
                              ID.cat = "Wu.Estabrook.2016",return.fit=TRUE, group.equal = c("thresholds","loadings","intercepts","residuals"),long.equal  = c("thresholds","loadings","intercepts","residuals"))
summary(modelo0.stric.ed, fit.measures=TRUE)
fitMeasures(modelo0.stric.ed,
            c( 'rmr','rmsea','gfi','agfi', 'nfi','cfi', 'ifi' ) )

#i organize the information. 
lavaan::anova(modelo0.stric.ed,modelo0.scalar.ed,modelo0.metric.ed,modelo0.conf.ed)

fit.stats <- rbind(fitmeasures(modelo0.conf.ed, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.metric.ed, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.scalar.ed, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")),
                   fitmeasures(modelo0.stric.ed, fit.measures = c("chisq", "df", "rmsea", "tli", "cfi", "aic")))
rownames(fit.stats) <- c("configural", "metric","scalar", "strict")
fit.stats

#this part of the code helps me to identify which elements i have to modify in each level. 
model3partial<-cfa(modelo0, orthogonal=FALSE, data=DFinvar, estimator="MLM",group="Sex", group.equal=c("loadings","intercepts"), group.partial=c("UCLA3~1"))
summary(model3partial,fit.measures=TRUE)
